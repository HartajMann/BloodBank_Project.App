@page "/History"
@using BloodBank_Project.Data


<h3 style="text-align:center">History</h3>
<div class="mb-3 mt-3">
	<select @bind="currentHistoryType" class="form-select" aria-label="Default select example" @onclick="FetchData">
		<option value="@HistoryType.None">Select The type of Information Needed</option>
		<option value="@HistoryType.RegisteredDonors">Registered Blood Donors</option>
		<option value="@HistoryType.Issues">Blood Issued</option>
		<option value="@HistoryType.Donations">Recent Donations</option>
	</select>
</div>

@if (currentHistoryType == HistoryType.RegisteredDonors)
{
	<table class="table">
		<thead>
			<tr>
				<th>Phone Number</th>
				<th>Name</th>
				<th>Gender</th>
				<th>Address</th>
				<th>City</th>
				<th>Blood Group</th>
				<th>Age</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var donor in donors)
			{
				<tr>
					<td>@donor.PhoneNumber</td>
					<td>@donor.Name</td>
					<td>@donor.Gender</td>
					<td>@donor.Address</td>
					<td>@donor.City</td>
					<td>@donor.BloodGroup</td>
					<td>@donor.Age</td>
				</tr>
			}
		</tbody>
	</table>
}
else if (currentHistoryType == HistoryType.Issues)
{
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Mobile</th>
				<th>Hospital</th>
				<th>Blood Group</th>
				<th>Units</th>
				<th>Reason</th>
				<th>Date of Issue</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var issue in issues)
			{
				<tr>
					<td>@issue.Name</td>
					<td>@issue.Mobile</td>
					<td>@issue.Hospital</td>
					<td>@issue.BloodGroup</td>
					<td>@issue.Units</td>
					<td>@issue.Purpose</td>
					<td>@issue.DateOfIssue</td>
				</tr>
			}
		</tbody>
	</table>
}
else if (currentHistoryType == HistoryType.Donations)
{
	<table class="table">
		<thead>
			<tr>
				<th>Mobile Number</th>
				<th>Blood Group</th>
				<th>Date of Donation</th>
				<th>No of Units</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var donation in donations)
			{
				<tr>
					<td>@donation.PhoneNumber</td>
					<td>@donation.BloodGroup</td>
					<td>@donation.DateOfDonation</td>
					<td>@donation.NoOfUnits</td>
				</tr>
			}
		</tbody>
	</table>
}
@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="row mt-4">
		<div class="col">
			<div class="alert alert-danger">
				<strong>Error:</strong> @errorMessage
			</div>
		</div>
	</div>
}
@code {
	DbmaManager Dbma = new DbmaManager();
	string errorMessage;
	// This enum defines the different types of history information that can be displayed.
	private enum HistoryType
	{
		None,
		RegisteredDonors,
		Issues,
		Donations
	}

	private HistoryType currentHistoryType = HistoryType.None;

	private List<Donor> donors = new List<Donor>();
	private List<IssuedRequest> issues = new List<IssuedRequest>();
	private List<Donate> donations = new List<Donate>();

	// This method is called whenever the user selects a different type of history information to display.
	private async Task FetchData()
	{
		try
		{
			// Depending on the current history type, this method calls the appropriate method in the DbmaManager class to fetch data from the database.
			if (currentHistoryType == HistoryType.RegisteredDonors)
			{
				donors = await Dbma.FetchAllDonorsAsync();
			}
			else if (currentHistoryType == HistoryType.Issues)
			{
				issues = await Dbma.FetchAllIssuesAsync();
			}
			else if (currentHistoryType == HistoryType.Donations)
			{
				donations = await Dbma.FetchAllDonationsAsync();
			}
		}
		catch (Exception ex)
		{
			errorMessage = ex.Message;
		}
	}
}
